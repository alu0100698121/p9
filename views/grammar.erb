<script type="text/javascript" src="path-to-mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});
</script>
<script type="text/javascript"
  src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>

<br>
Recuerde que una gramática $G$ es una cuaterna $G =(\Sigma,V,P,S)$.
<ol>
  <li>$\Sigma$ es el conjunto de terminales. 
  <li>$V$ es un conjunto (disjunto de $\Sigma$) que se denomina conjunto de <i>variables sintácticas</i> o <i>categorías gramáticales</i>,
  <li>$P$ es un conjunto de pares de $V \times (V \cup \Sigma )^*$. En vez de escribir
  un par usando la notación $(A, \alpha) \in P$ se escribe $A \rightarrow \alpha$.
  Un elemento de $P$ se denomina producción. 
  <li>Por último, $S$ es un símbolo del conjunto
  $V$ que se denomina símbolo de arranque.
</ol>
<ol>
  <li> $\Sigma = \{ ; =, \lt, \gt, ==, \lt=, \gt=, != ID, PI, E, +, -, *, /, (, ), NUMBER, CONST, VAR, PROCEDURE, IF, THEN, ELSE, CALL, ',', ., BEGIN, END, ODD \}$, 
  <li> $V = \{ prog, block, procedure, parameters, otro\_parameter, var, var\_otra, cont, cont\_otra, s, c, e \}$
  <li> Productions:
  <ol>
    <li>
<pre>
prog
    : block '.'
    ;

block
    : cont var procedure s  
    ;

procedure
    : PROCEDURE ID '(' parameters ')' BEGIN block END ';' procedure
    | /* empty */
    ;

parameters
    : e otro_parameter
    | /* empty */
    ;

otro_parameter
    : ',' e otro_parameter
    | /* empty */
    ;

var
    : VAR ID var_otra ';'
    | /* empty */
    ;

var_otra
    : ',' ID var_otra
    | /* empty */
    ;

cont
    : CONST ID '=' NUMBER cont_otra ';'
    | /* empty */
    ;

cont_otra
    : ',' ID '=' NUMBER cont_otra
    | /* empty */
    ;

s
    : ID '=' e ';'
    | CALL ID '(' parameters ')' ';'
    | IF c THEN s ELSE s
    | IF c THEN s 
    ;

c
    : e COMPARISON e
    | ODD e
    ;

e
    : e '+' e
    | e '-' e
    | e '*' e
    | e '/' e
    | '-' e 
    | '(' e ')'
    | NUMBER
    | E
    | PI
    | ID 
    ;
</pre>
  </ol>
  <li> Start symbol: $prog$
</ol>
<BR>
<BR>

